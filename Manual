equals는 대소문자를 구분하기 때문에 정확하게 "exit"를 입력했을 때만, true로 받아들임.
하지만, equalsIgnoreCase는 대소문자를 구분하지 않기 때문에 Exit, EXIT, ExIT 등도 true로 받아들임.
사용자가 다양한 형태로 입력해도 작동할 수(종료될 수 있도록) equalsIgnoreCase를 사용함.


SystemClock 클래스에서 setFixedTime 메소드
용도: 테스트 시 시스템 시간을 고정하여 결과를 얻고 싶을 때 사용하기 위함.(동작 재현용)
1. clock = Clock.fixed(fixedDateTime.atZone(Zone_ID).toInstant(), Zone_ID);
-> 고정된 시간 Clock 객체 생성
// 입력된 LocalDateTime을 KST 기준으로 Instant로 변환 -> Clock 설정

Register 클래스에서 userList를 public static으로 선언하여 Login 클래스 내에서 사용함.

@Override는 상속 관계가 있는 모든 곳에서 사용 가능.
-> TimerTask를 상속받아 run() 메소드 재정의. -> @Override 사용

Alarm 클래스에서 startScheduler 메소드가 호출되면, Timer가 현재 시간 확인 -> 조건에 맞는 알람을 보냄.(즉시 시작 -> 1초마다 반복)


